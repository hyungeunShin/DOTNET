//그리기모드 & 마우스캡처 코드
#pragma comment (linker, "/subsystem:windows")		// "/subsystem:console"

#include <Windows.h>
#include <tchar.h>

POINT start, end;
BOOL  bNowDraw = FALSE;

//선그리기 
/* 
LRESULT OnLButtonDown(HWND hwnd, WPARAM wParam, LPARAM lParam)
{
	start = end = { LOWORD(lParam), HIWORD(lParam) };
	bNowDraw = TRUE;

	return 0;
}

LRESULT OnMouseMove(HWND hwnd, WPARAM wParam, LPARAM lParam)
{
	if (bNowDraw)
	{
		HDC hdc = GetDC(hwnd);
		SetROP2(hdc, R2_NOT); //반전모드 1 ^1 = 0

		//지우는 역할
		MoveToEx(hdc, start.x, start.y, NULL);
		LineTo(hdc, end.x, end.y);

		//종점의 좌표 갱신
		end.x = LOWORD(lParam);
		end.y = HIWORD(lParam);

		//그리는 역할
		MoveToEx(hdc, start.x, start.y, NULL);
		LineTo(hdc, end.x, end.y);

		ReleaseDC(hwnd, hdc);
	}
	return 0;
}

LRESULT OnLButtonUp(HWND hwnd, WPARAM wParam, LPARAM lParam)
{
	bNowDraw = FALSE;
	HDC hdc = GetDC(hwnd);

	MoveToEx(hdc, start.x, start.y, NULL);
	LineTo(hdc, end.x, end.y);

	ReleaseDC(hwnd, hdc);
	return 0;
}
*/

//사각형 그리기
/*
LRESULT OnLButtonDown(HWND hwnd, WPARAM wParam, LPARAM lParam)
{
	start = end = { LOWORD(lParam), HIWORD(lParam) };
	bNowDraw = TRUE;

	return 0;
}

LRESULT OnMouseMove(HWND hwnd, WPARAM wParam, LPARAM lParam)
{
	if (bNowDraw)
	{
		HDC hdc = GetDC(hwnd);
		SetROP2(hdc, R2_NOT); //반전모드 1 ^1 = 0
		SelectObject(hdc, GetStockObject(NULL_BRUSH));

		//지우는 역할
		Rectangle(hdc, start.x, start.y, end.x, end.y);

		//종점의 좌표 갱신
		end.x = LOWORD(lParam);
		end.y = HIWORD(lParam);

		//그리는 역할
		Rectangle(hdc, start.x, start.y, end.x, end.y);

		ReleaseDC(hwnd, hdc);
	}
	return 0;
}

LRESULT OnLButtonUp(HWND hwnd, WPARAM wParam, LPARAM lParam)
{
	bNowDraw = FALSE;
	HDC hdc = GetDC(hwnd);
	SelectObject(hdc, GetStockObject(NULL_BRUSH));

	Rectangle(hdc, start.x, start.y, end.x, end.y);

	ReleaseDC(hwnd, hdc);
	return 0;
}
LRESULT OnLButtonDown(HWND hwnd, WPARAM wParam, LPARAM lParam)
{
	start = end = { LOWORD(lParam), HIWORD(lParam) };
	bNowDraw = TRUE;

	return 0;
}

LRESULT OnMouseMove(HWND hwnd, WPARAM wParam, LPARAM lParam)
{
	if (bNowDraw)
	{
		HDC hdc = GetDC(hwnd);
		SetROP2(hdc, R2_NOT); //반전모드 1 ^1 = 0
		SelectObject(hdc, GetStockObject(NULL_BRUSH));

		//지우는 역할
		Rectangle(hdc, start.x, start.y, end.x, end.y);

		//종점의 좌표 갱신
		end.x = LOWORD(lParam);
		end.y = HIWORD(lParam);

		//그리는 역할
		Rectangle(hdc, start.x, start.y, end.x, end.y);

		ReleaseDC(hwnd, hdc);
	}
	return 0;
}

LRESULT OnLButtonUp(HWND hwnd, WPARAM wParam, LPARAM lParam)
{
	bNowDraw = FALSE;
	HDC hdc = GetDC(hwnd);
	SelectObject(hdc, GetStockObject(NULL_BRUSH));

	Rectangle(hdc, start.x, start.y, end.x, end.y);

	ReleaseDC(hwnd, hdc);
	return 0;
}
*/


//사각형 그리기 & 마우스 캡처(LDown:캡처시작, LUp:캡처반납)
LRESULT OnLButtonDown(HWND hwnd, WPARAM wParam, LPARAM lParam)
{
	start = end = { LOWORD(lParam), HIWORD(lParam) };
	SetCapture(hwnd); 

	return 0;
}

LRESULT OnMouseMove(HWND hwnd, WPARAM wParam, LPARAM lParam)
{
	if ( GetCapture() == hwnd)	//누가 마우스를 캡쳐하고 있는가?
	{
		HDC hdc = GetDC(hwnd);
		SetROP2(hdc, R2_NOT); //반전모드 1 ^1 = 0
		SelectObject(hdc, GetStockObject(NULL_BRUSH));

		//지우는 역할
		Rectangle(hdc, start.x, start.y, end.x, end.y);

		//종점의 좌표 갱신
		end.x = LOWORD(lParam);
		end.y = HIWORD(lParam);

		//그리는 역할
		Rectangle(hdc, start.x, start.y, end.x, end.y);

		ReleaseDC(hwnd, hdc);
	}
	return 0;
}

LRESULT OnLButtonUp(HWND hwnd, WPARAM wParam, LPARAM lParam)
{
	ReleaseCapture();

	HDC hdc = GetDC(hwnd);
	SelectObject(hdc, GetStockObject(NULL_BRUSH));

	Rectangle(hdc, start.x, start.y, end.x, end.y);

	ReleaseDC(hwnd, hdc);
	return 0;
}

LRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)
{
	switch (msg)
	{
	case WM_LBUTTONDOWN:	return OnLButtonDown(hwnd, wParam, lParam);
	case WM_MOUSEMOVE:		return OnMouseMove(hwnd, wParam, lParam);
	case WM_LBUTTONUP:		return OnLButtonUp(hwnd, wParam, lParam);

	case WM_CREATE:
	{
		return 0;
	}
	case WM_DESTROY:
	{
		PostQuitMessage(0);
		return 0;
	}
	}
	return DefWindowProc(hwnd, msg, wParam, lParam);
}

int WINAPI _tWinMain(HINSTANCE hInst, HINSTANCE hPrev, LPTSTR lpCmdLine, int nShowCmd)
{
	//윈도우 클래스 정의
	WNDCLASS	wc;
	wc.cbClsExtra = 0;
	wc.cbWndExtra = 0;
	wc.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH); //펜, 브러쉬, 폰트
	wc.hCursor = LoadCursor(0, IDC_ARROW);//시스템
	wc.hIcon = LoadIcon(0, IDI_APPLICATION);
	wc.hInstance = hInst;
	wc.lpfnWndProc = WndProc;	 //미리 만들어서 제공되는 프로시저(윈도우 공통 기능)
	wc.lpszClassName = TEXT("First");
	wc.lpszMenuName = 0;		//메뉴 등록
	wc.style = 0;				//윈도우 스타일

	RegisterClass(&wc);

	HWND hwnd = CreateWindowEx(0,
		TEXT("FIRST"), TEXT("0830"), WS_OVERLAPPEDWINDOW,
		CW_USEDEFAULT, 0, CW_USEDEFAULT, 0,
		0, 0, hInst, 0);

	ShowWindow(hwnd, SW_SHOW);
	UpdateWindow(hwnd);

	//메시지 루프
	MSG msg;
	while (GetMessage(&msg, 0, 0, 0))
	{
		//TranslateMessage(&msg);
		DispatchMessage(&msg);
	}
	return 0;
}